version: "3.9"

services:
  web-chat-nodejs:
    build: .
    ports:
      - "8080"
    environment:
      - MONGO_DATABASE_USERNAME=${MONGO_DATABASE_USERNAME}
      - MONGO_DATABASE_PASSWORD=${MONGO_DATABASE_PASSWORD}
      - MONGO_BASEURL=${MONGO_BASEURL}
      - PORT=${PORT}
      - TOKEN_SECRET=${TOKEN_SECRET}
    networks:
      backend:
    deploy:
      replicas: 1
    depends_on:
      - web-chat-mongo

  cloudflared:
    image: cloudflare/cloudflared:latest
    restart: unless-stopped
    environment:
      - TUNNEL_TOKEN=${CLOUDFLARE_TOKEN}
    command: tunnel --no-autoupdate run
    networks:
      backend:


  nginx:
    image: nginx:latest
    ports:
      - "8080"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    networks:
      backend:
        ipv4_address: 172.2.0.254
    depends_on:
      - web-chat-nodejs

  web-chat-mongo:
    image: mongo:latest
    restart: always
    volumes:
      - web-chat-mongo-data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_DATABASE_USERNAME: ${MONGO_DATABASE_USERNAME}
      MONGO_DATABASE_PASSWORD: ${MONGO_DATABASE_PASSWORD}
      MONGO_INITDB_DATABASE: web-chat
    networks:
      backend:


  mongo-express:
    image: mongo-express:latest
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_URL: mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@web-chat-mongo:27017/
    depends_on:
      - web-chat-mongo
    networks:
      backend:


networks:
  backend:
    ipam:
      config:
        - subnet: 172.2.0.0/24

volumes:
  web-chat-mongo-data:
